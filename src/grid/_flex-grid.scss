.row, [class*=row-] {
  @include flex;
};

.col, [class*=col-] {
  @include flex;
};

.row, [class*=row-] {
  align-items: flex-start;
  margin: 0 0 0 #{-$grid-padding-x};
  width: calc(#{$grid-padding-x*2} + 100%);
  &.no-gutter {
    margin: 0;
    width: 100%;
    > .col, [class*=col-]  {
      padding: 0;
    }
  }
}

.col, [class*=col-] {
  align-items: center;
  flex-shrink: 1;
  flex-grow: 1;
  flex-basis: 0%;
  padding: 0 $grid-padding-x $grid-padding-y;
}

@for $i from 1 to $grid-columns {
  .col-#{$i} {
    flex-basis: #{$i*100/$grid-columns+'%' };
    max-width: #{$i*100/$grid-columns+'%' };
  }
}

@for $i from 1 to $grid-columns {
  .row-#{$i} > .col { min-width: #{100/$i+'%'}};
}

@for $i from 1 to $grid-columns {
  .offset-#{$i} { margin-left: #{$i*100/$grid-columns+'%' }}
}

// RESPONSIVE ROWS
.row[class*=tablet-] > .col,
.row[class*=desktop-] > .col,
.row[class*=widescreen-] > .col {
  min-width: 100%;
}

@each $key, $value in $breakpoints {
  @media all and (min-width: $value) {
    @for $i from 1 to $grid-columns {
      .row.#{$key}-#{$i} > .col { min-width: #{100/$i+'%'}};
    }
  }
}

// RESPONSIVE COLS
@each $key, $value in $breakpoints {
  @media all and (min-width: $value) {
    @for $i from 1 to $grid-columns {
      .col[class*=#{$key}-] {
        min-width: 100%;
      }
    }
  }
}

@each $key, $value in $breakpoints {
  @media all and (min-width: $value) {
    @for $i from 1 to $grid-columns {
      .col.#{$key}-#{$i} {
        min-width: #{$i*100/$grid-columns+'%' }
      }
    }
  }
}
